{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/CounterButton.js","components/Header.js","containers/App.js","actions.js","constants.js","reducers.js","serviceWorker.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","friends","console","log","map","u","i","key","SearchBox","seachfield","searchChange","type","placeholder","onChange","Scroll","props","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","Header","App","onRequestFriends","searchField","onSearchChange","isPending","filteredFriends","filter","friend","toLowerCase","includes","connect","searchFriends","requestFriends","dispatch","event","payload","target","value","fetch","then","res","json","data","catch","initialStateSearch","initialStateFriends","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","logger","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5b1222f6.chunk.js","sourcesContent":["import React from \"react\";\n\n// each card view\nconst Card = ({ name, email, id }) => {\n    return (\n        // class=\"tachyons\"\n        <section className=\"bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5\">\n            {/* Robohash displays images, 'id' makes images consistent to each object */}\n            <img src={`https://robohash.org/${id}?200x200`} alt={`${name}`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </section>\n    );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\n// cards collection view\nconst CardList = ({ friends }) => {\n    console.log(\"cardlist\");\n    return (\n        <div>\n            {friends.map((u, i) => {\n                // 'u' is the array (required), 'i' is the index\n                return (\n                    <Card\n                        key={i} // key attribute required - for loops (map)\n                        id={friends[i].id}\n                        name={friends[i].name}\n                        email={friends[i].email}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default CardList;\n","import React from \"react\";\n\n// search input view\nconst SearchBox = ({ seachfield, searchChange }) => {\n    console.log(\"searchbox\");\n    return (\n        <div className=\"pa2\">\n            <input\n                className=\"pa3 ba b--blue\"\n                type=\"search\"\n                placeholder=\"Search Robots\"\n                onChange={searchChange}\n            />\n        </div>\n    );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport './scroll.css';\n\nconst Scroll = (props) => {\n    return (\n        <div className=\"scroll-container\">\n            <div className=\"scroll-item\">\n                { props.children }\n            </div>\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    // catches errors in components\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true });\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h2>Ooops, something went wrong..</h2>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from \"react\";\n// import \"./CounterButton.css\";\n\nclass CounterButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0\n    };\n  }\n\n  // CounterButton Component will update\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.count !== nextState.count) {\n      return true;\n    }\n    return false;\n  }\n\n  updateCount = () => {\n    // Allows synchronous updating\n    this.setState(state => {\n      return { count: state.count + 1 };\n    });\n  };\n\n  render() {\n    console.log(\"CounterButton\");\n    return (\n      <button color={this.props.color} onClick={this.updateCount}>\n        Count: {this.state.count}\n      </button>\n    );\n  }\n}\n\nexport default CounterButton;\n","import React, { Component } from \"react\";\nimport CounterButton from './CounterButton';\nimport \"./Header.css\";\n\nclass Header extends Component {\n    // Header Component won't update\n    shouldComponentUpdate(nextProps, nextState) {\n        return false;\n    }\n\n    render() {\n        console.log(\"Header\");\n        return (\n            <div className=\"header\">\n                <h1 className=\"header-title\">Robot Friends</h1>\n                <CounterButton color={'white'}/>\n            </div>\n        );\n            \n    }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport Header from \"../components/Header\";\nimport { setSearchField, requestFriends } from \"../actions\";\nimport \"./app.css\";\n\nconst mapStateToProps = state => {\n    const {searchFriends, requestFriends} = state;\n    return {\n        searchField: searchFriends.searchField,\n        friends: requestFriends.friends,\n        isPending: requestFriends.isPending,\n        error: requestFriends.error\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSearchChange: event => dispatch(setSearchField(event.target.value)),\n        onRequestFriends: () => dispatch(requestFriends())\n    };\n};\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onRequestFriends();\n    }\n\n    render() {\n        const { searchField, onSearchChange, friends, isPending } = this.props;\n        // filter friends result while typing\n        const filteredFriends = friends.filter(friend => {\n            // compares each typed letter to the friends names\n            return friend.name\n                .toLowerCase()\n                .includes(searchField.toLowerCase());   \n        });\n\n        // ternary\n        return isPending ? (\n            // render loading view\n            <h1 className=\"tc header-title\">LOADING...</h1>\n        ) : (\n            // render app view\n            <main className=\"tc\">\n                <Header />\n\n                <SearchBox searchChange={onSearchChange} />\n\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList friends={filteredFriends} />\n                    </ErrorBoundary>\n                </Scroll>\n            </main>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_FRIENDS_PENDING,\n  REQUEST_FRIENDS_SUCCESS,\n  REQUEST_FRIENDS_FAILED\n} from \"./constants\";\n\n// ES6: {return {}} == ({})\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\n\nexport const requestFriends = () => dispatch => {\n  dispatch({ type: REQUEST_FRIENDS_PENDING });\n\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(res => res.json())\n    .then(data =>\n      dispatch({\n        type: REQUEST_FRIENDS_SUCCESS,\n        payload: data\n      })\n    )\n    .catch(error =>\n      dispatch({\n        type: REQUEST_FRIENDS_FAILED,\n        payload: error\n      })\n    );\n};\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\nexport const REQUEST_FRIENDS_PENDING = \"REQUEST_FRIENDS_PENDING\";\nexport const REQUEST_FRIENDS_SUCCESS = \"REQUEST_FRIENDS_SUCCESS\";\nexport const REQUEST_FRIENDS_FAILED = \"REQUEST_FRIENDS_FAILED\";","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_FRIENDS_PENDING,\n    REQUEST_FRIENDS_SUCCESS,\n    REQUEST_FRIENDS_FAILED\n} from \"./constants\";\n\nconst initialStateSearch = {\n    searchField: \"\"\n};\n\nconst initialStateFriends = {\n    friends: [],\n    isPending: false,\n    error: ''\n}\n\nexport const searchFriends = (state = initialStateSearch, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, { searchField: action.payload });\n            // {...state, {searchField: action.payload}}\n        default:\n            return state;\n    }\n};\n\nexport const requestFriends = (state = initialStateFriends, action = {}) => {\n    switch (action.type) {\n        case REQUEST_FRIENDS_PENDING:\n            return Object.assign({}, state, { isPending: true });\n        case REQUEST_FRIENDS_SUCCESS:\n            return Object.assign({}, state, {\n                friends: action.payload,\n                isPending: false\n            });\n        case REQUEST_FRIENDS_FAILED:\n            return Object.assign({}, state, {\n                error: action.payload,\n                isPending: false\n            });\n        default:\n            return state;\n    }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport {logger} from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\n import { searchFriends, requestFriends } from \"./reducers\";\nimport \"./index.css\";\nimport \"tachyons\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst rootReducer = combineReducers({ searchFriends, requestFriends });\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}